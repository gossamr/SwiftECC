{"metadata":{"role":"article","modules":[{"name":"SwiftECC"}],"title":"Create new Domains","roleHeading":"Article"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/createdomain"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"]}],"primaryContentSections":[{"content":[{"level":2,"text":"","type":"heading","anchor":""},{"type":"paragraph","inlineContent":[{"text":"You can create your own domains as illustrated by the two examples below.","type":"text"}]},{"type":"heading","text":"Example 1","level":3,"anchor":"Example-1"},{"inlineContent":[{"type":"text","text":"This is example 3.5 from [GUIDE]. It shows how to make your own prime characteristic domain."}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftECC","import BigInt","","\/\/ Create the domain","let domain = try Domain.instance(name: \"EC29\", p: BInt(29), a: BInt(4), b: BInt(20), gx: BInt(1), gy: BInt(5), order: BInt(37), cofactor: 1)","","let p1 = Point(BInt(5), BInt(22))","let p2 = Point(BInt(16), BInt(27))","","print(\"p1 + p2 =\", try domain.addPoints(p1, p2))","print(\"p1 * 2  =\", try domain.multiplyPoint(p1, BInt(2)))","","\/\/ Inspect the domain - please refer [SEC 1] appendix C.2","print(domain.asn1Explicit())"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["p1 + p2 = Point(13, 6)","p1 * 2  = Point(14, 6)","Sequence (6):","  Integer: 1","  Sequence (2):","    Object Identifier: 1.2.840.10045.1.1","    Integer: 29","  Sequence (2):","    Octet String (1): 04","    Octet String (1): 14","  Octet String (3): 04 01 05","  Integer: 37","  Integer: 1"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Example-2","type":"heading","text":"Example 2"},{"inlineContent":[{"type":"text","text":"This is example 3.6 from [GUIDE]. It shows how to make your own characteristic 2 domain."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import SwiftECC","import BigInt","","\/\/ Reduction polynomial for x^4 + x^1 + 1    ","let rp = RP(4, 1)","","\/\/ Create the domain","let domain = try Domain.instance(name: \"EC4\", rp: rp, a: BInt(8), b: BInt(9), gx: BInt(1), gy: BInt(1), order: BInt(22), cofactor: 2)","","let p1 = Point(BInt(2), BInt(15))","let p2 = Point(BInt(12), BInt(12))","","print(\"p1 + p2 =\", try domain.addPoints(p1, p2))","print(\"p1 * 2  =\", try domain.multiplyPoint(p1, BInt(2)))","","\/\/ Inspect the domain - please refer [SEC 1] appendix C.2","print(domain.asn1Explicit())"]},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"type":"codeListing","code":["p1 + p2 = Point(1, 1)","p1 * 2  = Point(11, 2)","Sequence (6):","  Integer: 1","  Sequence (2):","    Object Identifier: 1.2.840.10045.1.2","    Sequence (2):","      Integer: 4","      Integer: 1","  Sequence (2):","    Octet String (1): 08","    Octet String (1): 09","  Octet String (3): 04 01 01","  Integer: 22","  Integer: 2"],"syntax":"swift"}],"kind":"content"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","interfaceLanguage":"swift"},"references":{"doc://SwiftECC/documentation/SwiftECC/References":{"abstract":[],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","title":"References","url":"\/documentation\/swiftecc\/references","role":"article","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"url":"\/documentation\/swiftecc\/encryptdecrypt","role":"article","abstract":[],"kind":"article","title":"Encrypt and Decrypt","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt"},"doc://SwiftECC/documentation/SwiftECC/CreateKeys":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","role":"article","title":"Create new Keys","kind":"article","abstract":[],"url":"\/documentation\/swiftecc\/createkeys"},"doc://SwiftECC/documentation/SwiftECC/Dependencies":{"role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies","kind":"article","title":"Dependencies","url":"\/documentation\/swiftecc\/dependencies","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","abstract":[],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","title":"AEAD Encrypt and Decrypt"},"doc://SwiftECC/documentation/SwiftECC/Usage":{"kind":"article","title":"Usage","abstract":[],"role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","type":"topic","url":"\/documentation\/swiftecc\/usage"},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","abstract":[],"title":"SwiftECC","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","role":"collection","type":"topic","url":"\/documentation\/swiftecc"},"doc://SwiftECC/documentation/SwiftECC/Basics":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","abstract":[],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/basics","title":"Basics"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"abstract":[],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","title":"Secret Key Agreement","role":"article","url":"\/documentation\/swiftecc\/keyagrement","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"title":"Sign and Verify","url":"\/documentation\/swiftecc\/signverify","abstract":[],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","role":"article","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"abstract":[],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","title":"Elliptic Curve Arithmetic","role":"article","url":"\/documentation\/swiftecc\/ecarithmetic","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"abstract":[],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","url":"\/documentation\/swiftecc\/performance","title":"Performance","role":"article","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","type":"topic","abstract":[],"role":"article","kind":"article","url":"\/documentation\/swiftecc\/acknowledgement","title":"Acknowledgement"},"doc://SwiftECC/documentation/SwiftECC/LoadKeys":{"abstract":[],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/loadkeys","title":"Load exsisting Keys"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"abstract":[],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","title":"Encrypted Private Keys","role":"article","url":"\/documentation\/swiftecc\/encryptedkeys","type":"topic"}}}