{"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"],"generated":true,"title":"Articles"}],"abstract":[{"text":"SwiftECC implements the common elliptic curve arithmetic operations","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic"},"kind":"article","metadata":{"title":"Elliptic Curve Arithmetic","role":"article","roleHeading":"Article","modules":[{"name":"SwiftECC"}]},"primaryContentSections":[{"content":[{"anchor":"","text":"","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Point doubling"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point addition"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point subtraction"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Point negation"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Point multiplication","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Is Point on curve?"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"It is also possible to encode curve points in either compressed- or uncompressed format,","type":"text"},{"text":" ","type":"text"},{"text":"as well as to do the reverse decoding.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is done using the "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" methods "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/ecarithmetic"]}],"sections":[],"references":{"doc://SwiftECC/documentation/SwiftECC/Performance":{"role":"article","title":"Performance","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","type":"topic","url":"\/documentation\/swiftecc\/performance","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","title":"SwiftECC","type":"topic","url":"\/documentation\/swiftecc","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic curve cryptography","type":"text"}],"role":"collection"},"doc://SwiftECC/documentation/SwiftECC/References":{"role":"article","type":"topic","title":"References","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","kind":"article","url":"\/documentation\/swiftecc\/references","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}]},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"role":"article","title":"Secret Key Agreement","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","type":"topic","url":"\/documentation\/swiftecc\/keyagrement","abstract":[{"text":"Generating a shared secret","type":"text"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","title":"AEAD Encrypt and Decrypt","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","role":"article","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"kind":"article","type":"topic","url":"\/documentation\/swiftecc\/encryptedkeys","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","title":"Encrypted Private Keys"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"kind":"article","type":"topic","role":"article","url":"\/documentation\/swiftecc\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","title":"Key Management"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"kind":"article","type":"topic","url":"\/documentation\/swiftecc\/acknowledgement","abstract":[{"text":"The AES block cipher implementation is essentially a translation to Swift of the Go Language implementation of AES","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","role":"article","title":"Acknowledgement"},"doc://SwiftECC/documentation/SwiftECC/Domain/decodePoint(_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/swiftecc\/domain\/decodepoint(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodePoint"},{"text":"(","kind":"text"},{"text":"Bytes","preciseIdentifier":"s:8SwiftECC5Bytesa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Point","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5PointV"}],"role":"symbol","title":"decodePoint(_:)","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","abstract":[{"type":"text","text":"Decodes a Point from a byte array - please refer [SEC 1] section 2.3.4"}]},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"role":"article","url":"\/documentation\/swiftecc\/signverify","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","title":"Sign and Verify","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"role":"article","url":"\/documentation\/swiftecc\/createdomain","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","kind":"article","abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"type":"topic","title":"Create new Domains"},"doc://SwiftECC/documentation/SwiftECC/Domain/encodePoint(_:_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/swiftecc\/domain\/encodepoint(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodePoint"},{"kind":"text","text":"("},{"text":"Point","preciseIdentifier":"s:8SwiftECC5PointV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5Bytesa"}],"role":"symbol","title":"encodePoint(_:_:)","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)","abstract":[{"type":"text","text":"Encodes a Point to a byte array - please refer [SEC 1] section 2.3.3"}]},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"role":"article","url":"\/documentation\/swiftecc\/encryptdecrypt","abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","title":"Encrypt and Decrypt","type":"topic"}}}