{"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"seeAlsoSections":[{"title":"Articles","generated":true,"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/ecarithmetic"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"","level":2,"text":"","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Point doubling","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Point addition"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point subtraction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point negation"}]}]},{"content":[{"inlineContent":[{"text":"Point multiplication","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Is Point on curve?"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also possible to encode curve points in either compressed- or uncompressed format,"},{"text":" ","type":"text"},{"text":"as well as to do the reverse decoding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is done using the "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" methods "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)"},{"type":"text","text":"."}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"metadata":{"roleHeading":"Article","title":"Elliptic Curve Arithmetic","modules":[{"name":"SwiftECC"}],"role":"article"},"sections":[],"references":{"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","role":"article","kind":"article","url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","type":"topic","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","url":"\/documentation\/swiftecc\/signverify","title":"Sign and Verify","abstract":[{"text":"Signing data and verifying signatures","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/References":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","role":"article","kind":"article","title":"References","type":"topic","url":"\/documentation\/swiftecc\/references","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","role":"article","kind":"article","title":"AEAD Encrypt and Decrypt","type":"topic","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","abstract":[{"text":"Authenticated Encryption with Associated Data","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Domain/encodePoint(_:_:)":{"title":"encodePoint(_:_:)","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodePoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"Point","preciseIdentifier":"s:8SwiftECC5PointV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bytes","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5Bytesa"}],"url":"\/documentation\/swiftecc\/domain\/encodepoint(_:_:)","type":"topic","abstract":[{"type":"text","text":"Encodes a Point to a byte array - please refer [SEC 1] section 2.3.3"}]},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"type":"topic","url":"\/documentation\/swiftecc\/keyagrement","title":"Secret Key Agreement","abstract":[{"text":"Generating a shared secret","type":"text"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","role":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","kind":"article","url":"\/documentation\/swiftecc\/encryptedkeys","title":"Encrypted Private Keys","type":"topic","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"text":"ECIES encryption and decryption","type":"text"}],"title":"Encrypt and Decrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"type":"topic","url":"\/documentation\/swiftecc\/createdomain","title":"Create new Domains","abstract":[{"text":"You can create your own domains as illustrated by two examples","type":"text"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Domain/decodePoint(_:)":{"title":"decodePoint(_:)","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodePoint"},{"text":"(","kind":"text"},{"text":"Bytes","preciseIdentifier":"s:8SwiftECC5Bytesa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:8SwiftECC5PointV","text":"Point","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/swiftecc\/domain\/decodepoint(_:)","abstract":[{"type":"text","text":"Decodes a Point from a byte array - please refer [SEC 1] section 2.3.4"}]},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","url":"\/documentation\/swiftecc","abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","role":"collection","title":"SwiftECC"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"url":"\/documentation\/swiftecc\/performance","type":"topic","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"kind":"article","title":"Performance"}}}