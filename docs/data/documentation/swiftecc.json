{"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftECC provides elliptic curve cryptography in Swift.","type":"text"},{"text":" ","type":"text"},{"text":"This encompasses:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating, loading and storing public and private keys"}]}]},{"content":[{"inlineContent":[{"text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Ability to create your own domains","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"General elliptic curve arithmetic"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","text":"Basics","anchor":"Basics"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain"},{"type":"text","text":" class."},{"type":"text","text":" "},{"type":"text","text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail."}]},{"type":"paragraph","inlineContent":[{"text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get a predefined domain either from its curve, like"}]},{"type":"codeListing","code":["let domain = Domain.instance(curve: .EC521r1)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"or from its OID, like"}]},{"type":"codeListing","code":["let domain = try Domain.instance(oid: EC521r1.oid)"],"syntax":"swift"},{"level":3,"type":"heading","text":"Usage","anchor":"Usage"},{"inlineContent":[{"text":"To use SwiftECC, in your project ","type":"text"},{"inlineContent":[{"type":"text","text":"Package.swift"}],"type":"emphasis"},{"text":" file add a dependency like","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.5.0\"),","]"]},{"inlineContent":[{"type":"text","text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.7.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.21.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.13.0\"),","],"]},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftECC requires Swift 5.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"UInt"},{"text":" types be 64 bit types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"type":"text","text":" "},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}],"style":"important","type":"aside"}]}],"sections":[],"abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftECC\/documentation\/SwiftECC"},"kind":"symbol","topicSections":[{"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature"]},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP"]},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes"]},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"]},{"title":"Articles","anchor":"Articles","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"]}],"metadata":{"role":"collection","externalID":"SwiftECC","modules":[{"name":"SwiftECC"}],"symbolKind":"module","roleHeading":"Framework","title":"SwiftECC"},"references":{"doc://SwiftECC/documentation/SwiftECC/ECCurve":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECCurve"}],"navigatorTitle":[{"text":"ECCurve","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","url":"\/documentation\/swiftecc\/eccurve","title":"ECCurve","role":"symbol","abstract":[{"type":"text","text":"The predefined elliptic curves"}]},"doc://SwiftECC/documentation/SwiftECC/Bytes":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftecc\/bytes","navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"title":"Bytes","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","role":"collection","kind":"symbol","type":"topic","title":"SwiftECC","url":"\/documentation\/swiftecc","abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}]},"doc://SwiftECC/documentation/SwiftECC/Domain":{"url":"\/documentation\/swiftecc\/domain","abstract":[{"type":"text","text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","navigatorTitle":[{"kind":"identifier","text":"Domain"}],"role":"symbol","kind":"symbol","title":"Domain","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"title":"Performance","type":"topic","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","url":"\/documentation\/swiftecc\/performance","role":"article","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"title":"Encrypt and Decrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt"},"doc://SwiftECC/documentation/SwiftECC/BlockMode":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The block cipher modes"}],"type":"topic","url":"\/documentation\/swiftecc\/blockmode","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockMode"}],"navigatorTitle":[{"kind":"identifier","text":"BlockMode"}],"title":"BlockMode"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","role":"article","type":"topic","url":"\/documentation\/swiftecc\/signverify","title":"Sign and Verify","kind":"article","abstract":[{"text":"Signing data and verifying signatures","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Point":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","abstract":[{"text":"An elliptic curve point","type":"text"}],"title":"Point","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Point"}],"navigatorTitle":[{"kind":"identifier","text":"Point"}],"kind":"symbol","url":"\/documentation\/swiftecc\/point"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","title":"Secret Key Agreement","role":"article","kind":"article","type":"topic","url":"\/documentation\/swiftecc\/keyagrement","abstract":[{"text":"Generating a shared secret","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/ECException":{"title":"ECException","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECException","kind":"identifier"}],"navigatorTitle":[{"text":"ECException","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The elliptic curve exceptions"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException","type":"topic","role":"symbol","url":"\/documentation\/swiftecc\/ecexception"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"title":"Encrypted Private Keys","type":"topic","url":"\/documentation\/swiftecc\/encryptedkeys","kind":"article","role":"article","abstract":[{"type":"text","text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","type":"topic","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"role":"article","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","title":"AEAD Encrypt and Decrypt"},"doc://SwiftECC/documentation/SwiftECC/ECPrivateKey":{"url":"\/documentation\/swiftecc\/ecprivatekey","kind":"symbol","navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}],"role":"symbol","title":"ECPrivateKey","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPrivateKey","kind":"identifier"}],"abstract":[{"text":"An elliptic curve private key","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/ECSignature":{"kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature","url":"\/documentation\/swiftecc\/ecsignature","navigatorTitle":[{"kind":"identifier","text":"ECSignature"}],"title":"ECSignature","abstract":[{"text":"An elliptic curve signature","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECSignature"}],"type":"topic","role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/References":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"title":"References","url":"\/documentation\/swiftecc\/references","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","title":"Elliptic Curve Arithmetic","type":"topic","abstract":[{"text":"SwiftECC implements the common elliptic curve arithmetic operations","type":"text"}],"url":"\/documentation\/swiftecc\/ecarithmetic","role":"article","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/RP":{"type":"topic","role":"symbol","title":"RP","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","abstract":[{"text":"An elliptic curve reduction polynomial","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RP"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RP"}],"kind":"symbol","url":"\/documentation\/swiftecc\/rp"},"doc://SwiftECC/documentation/SwiftECC/ECPublicKey":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","url":"\/documentation\/swiftecc\/ecpublickey","title":"ECPublicKey","abstract":[{"type":"text","text":"An elliptic curve public key"}],"navigatorTitle":[{"text":"ECPublicKey","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPublicKey","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"role":"article","url":"\/documentation\/swiftecc\/keymanagement","kind":"article","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"type":"topic","title":"Key Management","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement"},"doc://SwiftECC/documentation/SwiftECC/Byte":{"url":"\/documentation\/swiftecc\/byte","title":"Byte","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","navigatorTitle":[{"kind":"identifier","text":"Byte"}],"type":"topic","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/AESCipher":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AESCipher","kind":"identifier"}],"navigatorTitle":[{"text":"AESCipher","kind":"identifier"}],"type":"topic","title":"AESCipher","abstract":[{"text":"The AES block ciphers","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftecc\/aescipher","role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"title":"Create new Domains","url":"\/documentation\/swiftecc\/createdomain","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain"}}}