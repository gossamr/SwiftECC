{"abstract":[{"text":"Elliptic Curve Cryptography","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature"],"title":"Classes"},{"title":"Structures","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"]},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"],"title":"Articles"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Framework","externalID":"SwiftECC","title":"SwiftECC","role":"collection","symbolKind":"module","modules":[{"name":"SwiftECC"}]},"sections":[],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"SwiftECC provides elliptic curve cryptography in Swift."},{"text":" ","type":"text"},{"text":"This encompasses:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Creating, loading and storing public and private keys","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher"}]}]},{"content":[{"inlineContent":[{"text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Ability to create your own domains","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"General elliptic curve arithmetic","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"Basics","text":"Basics"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the "},{"isActive":true,"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","type":"reference"},{"type":"text","text":" class."},{"text":" ","type":"text"},{"type":"text","text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail."}]},{"type":"paragraph","inlineContent":[{"text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,","type":"text"},{"type":"text","text":" "},{"text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains.","type":"text"}]},{"inlineContent":[{"type":"text","text":"You can get a predefined domain either from its curve, like"}],"type":"paragraph"},{"code":["let domain = Domain.instance(curve: .EC521r1)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"or from its OID, like","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let domain = try Domain.instance(oid: EC521r1.oid)"],"syntax":"swift"},{"type":"heading","anchor":"Usage","level":3,"text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"To use SwiftECC, in your project ","type":"text"},{"inlineContent":[{"type":"text","text":"Package.swift"}],"type":"emphasis"},{"text":" file add a dependency like","type":"text"}]},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.4.0\"),","]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.6.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.19.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.8.0\"),","],"]},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftECC requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"},{"inlineContent":[{"text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,","type":"text"},{"text":" ","type":"text"},{"text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftecc"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftECC/documentation/SwiftECC/ECSignature":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECSignature"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An elliptic curve signature"}],"title":"ECSignature","url":"\/documentation\/swiftecc\/ecsignature","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ECSignature"}]},"doc://SwiftECC/documentation/SwiftECC/RP":{"abstract":[{"type":"text","text":"An elliptic curve reduction polynomial"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RP"}],"kind":"symbol","navigatorTitle":[{"text":"RP","kind":"identifier"}],"title":"RP","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","type":"topic","url":"\/documentation\/swiftecc\/rp"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"type":"topic","url":"\/documentation\/swiftecc\/keyagrement","title":"Secret Key Agreement","abstract":[{"text":"Generating a shared secret","type":"text"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","role":"article"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"type":"topic","url":"\/documentation\/swiftecc\/createdomain","title":"Create new Domains","abstract":[{"text":"You can create your own domains as illustrated by two examples","type":"text"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"url":"\/documentation\/swiftecc\/performance","type":"topic","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"kind":"article","title":"Performance"},"doc://SwiftECC/documentation/SwiftECC/Point":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Point"}],"title":"Point","type":"topic","url":"\/documentation\/swiftecc\/point","abstract":[{"text":"An elliptic curve point","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Point"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/BlockMode":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMode"}],"navigatorTitle":[{"text":"BlockMode","kind":"identifier"}],"url":"\/documentation\/swiftecc\/blockmode","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","title":"BlockMode","role":"symbol","abstract":[{"text":"The block cipher modes","type":"text"}],"type":"topic","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/Domain":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","abstract":[{"type":"text","text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime"}],"kind":"symbol","url":"\/documentation\/swiftecc\/domain","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}],"type":"topic","role":"symbol","title":"Domain","navigatorTitle":[{"text":"Domain","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/ECException":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECException"}],"kind":"symbol","abstract":[{"text":"The elliptic curve exceptions","type":"text"}],"title":"ECException","type":"topic","navigatorTitle":[{"text":"ECException","kind":"identifier"}],"url":"\/documentation\/swiftecc\/ecexception","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"abstract":[{"text":"SwiftECC implements the common elliptic curve arithmetic operations","type":"text"}],"title":"Elliptic Curve Arithmetic","url":"\/documentation\/swiftecc\/ecarithmetic","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/ECPrivateKey":{"navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"ECPrivateKey","abstract":[{"text":"An elliptic curve private key","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","url":"\/documentation\/swiftecc\/ecprivatekey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPrivateKey","kind":"identifier"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","url":"\/documentation\/swiftecc","abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","role":"collection","title":"SwiftECC"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","kind":"article","url":"\/documentation\/swiftecc\/encryptedkeys","title":"Encrypted Private Keys","type":"topic","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Byte":{"url":"\/documentation\/swiftecc\/byte","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","title":"Byte","abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Byte"}],"role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","role":"article","kind":"article","url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","type":"topic","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","url":"\/documentation\/swiftecc\/signverify","title":"Sign and Verify","abstract":[{"text":"Signing data and verifying signatures","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/References":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","role":"article","kind":"article","title":"References","type":"topic","url":"\/documentation\/swiftecc\/references","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/AESCipher":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AESCipher"}],"kind":"symbol","abstract":[{"text":"The AES block ciphers","type":"text"}],"title":"AESCipher","type":"topic","navigatorTitle":[{"text":"AESCipher","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","url":"\/documentation\/swiftecc\/aescipher"},"doc://SwiftECC/documentation/SwiftECC/Bytes":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bytes"}],"url":"\/documentation\/swiftecc\/bytes","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes","type":"topic","title":"Bytes","kind":"symbol","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Bytes"}]},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"text":"ECIES encryption and decryption","type":"text"}],"title":"Encrypt and Decrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/ECCurve":{"abstract":[{"type":"text","text":"The predefined elliptic curves"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECCurve"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","type":"topic","url":"\/documentation\/swiftecc\/eccurve","kind":"symbol","title":"ECCurve","navigatorTitle":[{"kind":"identifier","text":"ECCurve"}]},"doc://SwiftECC/documentation/SwiftECC/ECPublicKey":{"title":"ECPublicKey","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ECPublicKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECPublicKey"}],"url":"\/documentation\/swiftecc\/ecpublickey","type":"topic","abstract":[{"type":"text","text":"An elliptic curve public key"}]},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","role":"article","kind":"article","title":"AEAD Encrypt and Decrypt","type":"topic","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","abstract":[{"text":"Authenticated Encryption with Associated Data","type":"text"}]}}}