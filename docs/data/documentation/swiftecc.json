{"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"SwiftECC provides elliptic curve cryptography in Swift.","type":"text"},{"text":" ","type":"text"},{"text":"This encompasses:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating, loading and storing public and private keys"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ability to create your own domains"}]}]},{"content":[{"inlineContent":[{"text":"General elliptic curve arithmetic","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Basics","type":"heading","text":"Basics"},{"inlineContent":[{"type":"text","text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain"},{"text":" class.","type":"text"},{"type":"text","text":" "},{"text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,"},{"type":"text","text":" "},{"text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get a predefined domain either from its curve, like"}]},{"syntax":"swift","code":["let domain = Domain.instance(curve: .EC521r1)"],"type":"codeListing"},{"inlineContent":[{"text":"or from its OID, like","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let domain = try Domain.instance(oid: EC521r1.oid)"],"type":"codeListing"},{"type":"heading","level":3,"text":"Usage","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftECC, in your project "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package.swift"}]},{"type":"text","text":" file add a dependency like"}]},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.3.0\"),","]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.5.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.16.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.4.0\"),","],"]},{"content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftECC requires Swift 5.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"UInt"},{"text":" types be 64 bit types.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"text":" ","type":"text"},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}],"type":"paragraph"}],"name":"Important","style":"important","type":"aside"}],"kind":"content"}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature"]},{"title":"Structures","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Base64"]},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes"],"title":"Type Aliases"},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"],"title":"Enumerations"},{"title":"Articles","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/swiftecc"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Elliptic curve cryptography"}],"metadata":{"externalID":"SwiftECC","modules":[{"name":"SwiftECC"}],"symbolKind":"module","role":"collection","roleHeading":"Framework","title":"SwiftECC"},"hierarchy":{"paths":[[]]},"references":{"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"role":"article","url":"\/documentation\/swiftecc\/ecarithmetic","abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","title":"Elliptic Curve Arithmetic","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"role":"article","url":"\/documentation\/swiftecc\/createdomain","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","kind":"article","abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"type":"topic","title":"Create new Domains"},"doc://SwiftECC/documentation/SwiftECC/ECPublicKey":{"url":"\/documentation\/swiftecc\/ecpublickey","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ECPublicKey","kind":"identifier"}],"abstract":[{"type":"text","text":"An elliptic curve public key"}],"title":"ECPublicKey","navigatorTitle":[{"kind":"identifier","text":"ECPublicKey"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"kind":"article","type":"topic","role":"article","url":"\/documentation\/swiftecc\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","title":"Key Management"},"doc://SwiftECC/documentation/SwiftECC/ECSignature":{"abstract":[{"type":"text","text":"An elliptic curve signature"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECSignature"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature","navigatorTitle":[{"text":"ECSignature","kind":"identifier"}],"url":"\/documentation\/swiftecc\/ecsignature","kind":"symbol","type":"topic","title":"ECSignature"},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","title":"SwiftECC","type":"topic","url":"\/documentation\/swiftecc","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic curve cryptography","type":"text"}],"role":"collection"},"doc://SwiftECC/documentation/SwiftECC/ECException":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException","url":"\/documentation\/swiftecc\/ecexception","navigatorTitle":[{"text":"ECException","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECException"}],"title":"ECException","kind":"symbol","abstract":[{"type":"text","text":"The elliptic curve exceptions"}]},"doc://SwiftECC/documentation/SwiftECC/ECCurve":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECCurve","kind":"identifier"}],"navigatorTitle":[{"text":"ECCurve","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","title":"ECCurve","kind":"symbol","url":"\/documentation\/swiftecc\/eccurve","abstract":[{"type":"text","text":"The predefined elliptic curves"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/AESCipher":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AESCipher"}],"navigatorTitle":[{"text":"AESCipher","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","title":"AESCipher","kind":"symbol","url":"\/documentation\/swiftecc\/aescipher","abstract":[{"text":"The AES block ciphers","type":"text"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/References":{"role":"article","type":"topic","title":"References","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","kind":"article","url":"\/documentation\/swiftecc\/references","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}]},"doc://SwiftECC/documentation/SwiftECC/Byte":{"title":"Byte","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"url":"\/documentation\/swiftecc\/byte","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","navigatorTitle":[{"kind":"identifier","text":"Byte"}],"kind":"symbol","role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/ECPrivateKey":{"title":"ECPrivateKey","url":"\/documentation\/swiftecc\/ecprivatekey","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","abstract":[{"type":"text","text":"An elliptic curve private key"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECPrivateKey"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"kind":"article","type":"topic","url":"\/documentation\/swiftecc\/acknowledgement","abstract":[{"text":"The AES block cipher implementation is essentially a translation to Swift of the Go Language implementation of AES","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","role":"article","title":"Acknowledgement"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"role":"article","title":"Performance","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","type":"topic","url":"\/documentation\/swiftecc\/performance","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"role":"article","url":"\/documentation\/swiftecc\/encryptdecrypt","abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","title":"Encrypt and Decrypt","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Bytes":{"title":"Bytes","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftecc\/bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bytes"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes","navigatorTitle":[{"kind":"identifier","text":"Bytes"}]},"doc://SwiftECC/documentation/SwiftECC/Point":{"abstract":[{"type":"text","text":"An elliptic curve point"}],"role":"symbol","navigatorTitle":[{"text":"Point","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Point","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","title":"Point","url":"\/documentation\/swiftecc\/point"},"doc://SwiftECC/documentation/SwiftECC/Base64":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Base64","type":"topic","title":"Base64","kind":"symbol","url":"\/documentation\/swiftecc\/base64","role":"symbol","navigatorTitle":[{"text":"Base64","kind":"identifier"}],"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Base64","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/Domain":{"title":"Domain","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftecc\/domain","abstract":[{"text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","navigatorTitle":[{"text":"Domain","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/RP":{"abstract":[{"type":"text","text":"An elliptic curve reduction polynomial"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RP","kind":"identifier"}],"title":"RP","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","kind":"symbol","navigatorTitle":[{"text":"RP","kind":"identifier"}],"url":"\/documentation\/swiftecc\/rp"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"kind":"article","type":"topic","url":"\/documentation\/swiftecc\/encryptedkeys","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","title":"Encrypted Private Keys"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"role":"article","title":"Secret Key Agreement","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","type":"topic","url":"\/documentation\/swiftecc\/keyagrement","abstract":[{"text":"Generating a shared secret","type":"text"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/BlockMode":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","abstract":[{"type":"text","text":"The block cipher modes"}],"kind":"symbol","navigatorTitle":[{"text":"BlockMode","kind":"identifier"}],"role":"symbol","title":"BlockMode","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlockMode"}],"url":"\/documentation\/swiftecc\/blockmode"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","title":"AEAD Encrypt and Decrypt","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","role":"article","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"role":"article","url":"\/documentation\/swiftecc\/signverify","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"kind":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","title":"Sign and Verify","type":"topic"}}}