{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/aeadencryptdecrypt"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"","anchor":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"Authenticated Encryption with Associated Data (AEAD) is implemented with the ChaCha20 \/ Poly1305 algorithm and the AES \/ GCM algorithm."},{"type":"text","text":" "},{"text":"Both implementations use Appleâ€™s CryptoKit framework, that takes advantage of hardware support for the AES and GCM algorithms.","type":"text"}]},{"type":"heading","text":"Example","level":3,"anchor":"Example"},{"type":"codeListing","code":["import SwiftECC","","let plainText = \"Hi, there!\"","let aaData = \"This is the additional authenticated data\"","","let (pub, priv) = Domain.instance(curve: .EC256k1).makeKeyPair()","","let cipherText1 = pub.encryptChaCha(msg: Bytes(plainText.utf8), aad: Bytes(aaData.utf8))","let cipherText2 = pub.encryptAESGCM(msg: Bytes(plainText.utf8), cipher: .AES128, aad: Bytes(aaData.utf8))","","do {","  let text1 = try priv.decryptChaCha(msg: cipherText1, aad: Bytes(aaData.utf8))","  print(String(bytes: text1, encoding: .utf8)!)","","  let text2 = try priv.decryptAESGCM(msg: cipherText2, cipher: .AES128, aad: Bytes(aaData.utf8))","  print(String(bytes: text2, encoding: .utf8)!)","} catch {","  print(\"Exception: \\(error)\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"type":"codeListing","syntax":"swift","code":["Hi, there!","Hi, there!"]},{"inlineContent":[{"text":"The encryption and decryption speed for domain EC256k1 (the bitcoin domain) measured on an iMac 2021,","type":"text"},{"type":"text","text":" "},{"text":"Apple M1 chip is shown below - units are Megabytes per second.","type":"text"}],"type":"paragraph"},{"type":"table","header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm"}]}],[{"type":"paragraph","inlineContent":[{"text":"Encrypt","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Decrypt","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"ChaCha20\/Poly1305"}]}],[{"inlineContent":[{"type":"text","text":"500 MByte\/Sec"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"425 MByte\/Sec"}]}]],[[{"inlineContent":[{"type":"text","text":"AES-128\/GCM"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"2000 MByte\/Sec"}]}],[{"inlineContent":[{"type":"text","text":"1200 MByte\/Sec"}],"type":"paragraph"}]]]},{"type":"heading","level":3,"text":"Key Derivation","anchor":"Key-Derivation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC uses the X9.63 Key Derivation Function to derive block cipher keying materiel. Please refer [SEC 1] section 3.6."},{"text":" ","type":"text"},{"type":"text","text":"Four cases are considered:"}]},{"anchor":"ChaCha20Poly1305","text":"ChaCha20\/Poly1305","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"KDF generates 44 bytes."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Encryption\/decryption key = bytes 0 ..< 32"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Nonce = bytes 32 ..< 44","type":"text"}]},{"level":4,"type":"heading","text":"AES-128\/GCM","anchor":"AES-128GCM"},{"inlineContent":[{"text":"KDF generates 28 bytes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 16","type":"text"}]},{"inlineContent":[{"type":"text","text":"Nonce = bytes 16 ..< 28"}],"type":"paragraph"},{"text":"AES-192\/GCM","type":"heading","level":4,"anchor":"AES-192GCM"},{"type":"paragraph","inlineContent":[{"text":"KDF generates 36 bytes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"AES encryption\/decryption key = bytes 0 ..< 24"}]},{"inlineContent":[{"text":"Nonce = bytes 24 ..< 36","type":"text"}],"type":"paragraph"},{"anchor":"AES-256GCM","level":4,"text":"AES-256\/GCM","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KDF generates 44 bytes."}]},{"inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 32","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Nonce = bytes 32 ..< 44","type":"text"}]}]}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"],"generated":true}],"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftECC"}],"title":"AEAD Encrypt and Decrypt","roleHeading":"Article","role":"article"},"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SwiftECC/documentation/SwiftECC/LoadKeys":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","title":"Load exsisting Keys","role":"article","kind":"article","url":"\/documentation\/swiftecc\/loadkeys","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"title":"Elliptic Curve Arithmetic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","role":"article","kind":"article","url":"\/documentation\/swiftecc\/ecarithmetic","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","kind":"article","url":"\/documentation\/swiftecc\/signverify","role":"article","title":"Sign and Verify","abstract":[]},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","title":"Secret Key Agreement","role":"article","kind":"article","url":"\/documentation\/swiftecc\/keyagrement","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Dependencies":{"title":"Dependencies","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies","role":"article","kind":"article","url":"\/documentation\/swiftecc\/dependencies","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"title":"Encrypted Private Keys","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","kind":"article","url":"\/documentation\/swiftecc\/encryptedkeys","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"url":"\/documentation\/swiftecc\/acknowledgement","role":"article","title":"Acknowledgement","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","abstract":[],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC":{"kind":"symbol","url":"\/documentation\/swiftecc","abstract":[],"title":"SwiftECC","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","type":"topic","role":"collection"},"doc://SwiftECC/documentation/SwiftECC/References":{"url":"\/documentation\/swiftecc\/references","role":"article","title":"References","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","abstract":[],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/CreateKeys":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","type":"topic","kind":"article","url":"\/documentation\/swiftecc\/createkeys","role":"article","title":"Create new Keys","abstract":[]},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"url":"\/documentation\/swiftecc\/createdomain","role":"article","title":"Create new Domains","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","abstract":[],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/Usage":{"title":"Usage","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","role":"article","kind":"article","url":"\/documentation\/swiftecc\/usage","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","kind":"article","url":"\/documentation\/swiftecc\/encryptdecrypt","role":"article","title":"Encrypt and Decrypt","abstract":[]},"doc://SwiftECC/documentation/SwiftECC/Performance":{"url":"\/documentation\/swiftecc\/performance","role":"article","title":"Performance","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/Basics":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","type":"topic","kind":"article","url":"\/documentation\/swiftecc\/basics","role":"article","title":"Basics","abstract":[]}}}