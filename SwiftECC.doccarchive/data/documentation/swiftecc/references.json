{"hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"],"generated":true,"title":"Articles"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"","anchor":""},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"[FIPS 180-4] - FIPS PUB 180-4 - Secure Hash Standard (SHS), August 2015","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"[GCM] - The Galois\/Counter Mode of Operation (GCM)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"[GUIDE] - Hankerson, Menezes, Vanstone: Guide to Elliptic Curve Cryptography. Springer 2004","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"[KNUTH] - Donald E. Knuth: Seminumerical Algorithms. Addison-Wesley 1971"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"[NIST] - NIST Special Publication 800-38D, November 2007"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"[PKCS#5] - Password-Based Cryptography Specification - Version 2.0, September 2000"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"[RFC 5869] - HMAC-based Extract-and-Expand Key Derivation Function (HKDF), May 2010","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[RFC 6979] - Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA), August 2013"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"[SAVACS] - E. Savacs, C.K. Koc: The Montgomery Modular Inverse - Revisited, July 2000","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[SEC 1] - Standards for Efficient Cryptography 1 (SEC 1), Certicom Corp. 2009"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"[SEC 2] - Standards for Efficient Cryptography 2 (SEC 2), Certicom Corp. 2010"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"[WARREN] - Henry S. Warren, Jr.: Montgomery Multiplication, July 2012"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"[X9.62] - X9.62 - Public Key Cryptography For The Financial Services Industry, 1998","type":"text"}],"type":"paragraph"}]}]}]}],"metadata":{"title":"References","roleHeading":"Article","modules":[{"name":"SwiftECC"}],"role":"article"},"abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/references"]}],"kind":"article","references":{"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","title":"AEAD Encrypt and Decrypt","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"abstract":[{"type":"text","text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","url":"\/documentation\/swiftecc\/encryptedkeys","title":"Encrypted Private Keys","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC":{"url":"\/documentation\/swiftecc","type":"topic","role":"collection","title":"SwiftECC","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic curve cryptography","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","url":"\/documentation\/swiftecc\/ecarithmetic","title":"Elliptic Curve Arithmetic","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"role":"article","url":"\/documentation\/swiftecc\/performance","type":"topic","title":"Performance","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"type":"text","text":"Execution times for certain SwiftECC operations"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","url":"\/documentation\/swiftecc\/createdomain","title":"Create new Domains","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","title":"Encrypt and Decrypt","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"abstract":[{"type":"text","text":"Generating a shared secret"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","url":"\/documentation\/swiftecc\/keyagrement","title":"Secret Key Agreement","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","title":"Sign and Verify","kind":"article","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"url":"\/documentation\/swiftecc\/signverify","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","title":"Acknowledgement","kind":"article","abstract":[{"type":"text","text":"The AES block cipher implementation is essentially a translation to Swift of the Go Language implementation of AES"}],"url":"\/documentation\/swiftecc\/acknowledgement","role":"article"}}}