{"abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/References"],"anchor":"Articles","title":"Articles","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc\/ecarithmetic"]}],"kind":"article","primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"","text":""},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Point doubling","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Point addition","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Point subtraction","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point negation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Point multiplication","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Is Point on curve?"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"It is also possible to encode curve points in either compressed- or uncompressed format,","type":"text"},{"text":" ","type":"text"},{"text":"as well as to do the reverse decoding.","type":"text"},{"text":" ","type":"text"},{"text":"This is done using the ","type":"text"},{"code":"Domain","type":"codeVoice"},{"text":" methods ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC"]]},"identifier":{"url":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECArithmetic","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftECC"}],"role":"article","title":"Elliptic Curve Arithmetic","roleHeading":"Article"},"references":{"doc://swiftecc.SwiftECC/documentation/SwiftECC/Domain/decodePoint(_:)":{"url":"\/documentation\/swiftecc\/domain\/decodepoint(_:)","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","role":"symbol","title":"decodePoint(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodePoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5Bytesa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Point","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5PointV"}],"type":"topic","abstract":[{"text":"Decodes a Point from a byte array - please refer [SEC 1] section 2.3.4","type":"text"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Performance":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Performance","url":"\/documentation\/swiftecc\/performance","title":"Performance"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/CreateDomain":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/CreateDomain","title":"Create new Domains","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/createdomain","abstract":[{"text":"You can create your own domains as illustrated by two examples","type":"text"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyAgrement","title":"Secret Key Agreement","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/keyagrement","abstract":[{"type":"text","text":"Generating a shared secret"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Domain/encodePoint(_:_:)":{"role":"symbol","kind":"symbol","type":"topic","title":"encodePoint(_:_:)","url":"\/documentation\/swiftecc\/domain\/encodepoint(_:_:)","abstract":[{"text":"Encodes a Point to a byte array - please refer [SEC 1] section 2.3.3","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodePoint"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Point","preciseIdentifier":"s:8SwiftECC5PointV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bytes","preciseIdentifier":"s:8SwiftECC5Bytesa"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"url":"\/documentation\/swiftecc\/aeadencryptdecrypt","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","title":"AEAD Encrypt and Decrypt","type":"topic","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"kind":"article","role":"article"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/KeyManagement":{"url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyManagement","type":"topic","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"kind":"article","role":"article"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/References":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/References","url":"\/documentation\/swiftecc\/references","title":"References"},"doc://swiftecc.SwiftECC/documentation/SwiftECC":{"type":"topic","abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC","kind":"symbol","title":"SwiftECC","url":"\/documentation\/swiftecc","role":"collection"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/EncryptedKeys":{"role":"article","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","kind":"article","type":"topic","title":"Encrypted Private Keys","url":"\/documentation\/swiftecc\/encryptedkeys","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"ECIES encryption and decryption","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","title":"Encrypt and Decrypt"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","role":"article","abstract":[{"text":"Signing data and verifying signatures","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/SignVerify","url":"\/documentation\/swiftecc\/signverify","kind":"article","title":"Sign and Verify"}}}