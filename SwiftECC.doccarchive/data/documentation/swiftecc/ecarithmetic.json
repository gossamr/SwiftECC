{"sections":[],"kind":"article","abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"seeAlsoSections":[{"generated":true,"title":"Articles","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"]}],"metadata":{"title":"Elliptic Curve Arithmetic","modules":[{"name":"SwiftECC"}],"roleHeading":"Article","role":"article"},"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"text":"","level":2,"anchor":"","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Point doubling"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point addition"}]}]},{"content":[{"inlineContent":[{"text":"Point subtraction","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Point negation","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Point multiplication"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Is Point on curve?"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"It is also possible to encode curve points in either compressed- or uncompressed format,","type":"text"},{"type":"text","text":" "},{"text":"as well as to do the reverse decoding.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is done using the "},{"type":"codeVoice","code":"Domain"},{"text":" methods ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","type":"reference"},{"type":"text","text":"."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/swiftecc\/ecarithmetic"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"references":{"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","role":"article","type":"topic","title":"Secret Key Agreement","abstract":[{"type":"text","text":"Generating a shared secret"}],"kind":"article","url":"\/documentation\/swiftecc\/keyagrement"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"kind":"article","url":"\/documentation\/swiftecc\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","title":"Key Management","type":"topic","role":"article"},"doc://SwiftECC/documentation/SwiftECC":{"type":"topic","kind":"symbol","title":"SwiftECC","role":"collection","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic Curve Cryptography","type":"text"}],"url":"\/documentation\/swiftecc"},"doc://SwiftECC/documentation/SwiftECC/Domain/decodePoint(_:)":{"url":"\/documentation\/swiftecc\/domain\/decodepoint(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodePoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"Bytes","kind":"typeIdentifier","preciseIdentifier":"s:8SwiftECC5Bytesa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Point","preciseIdentifier":"s:8SwiftECC5PointV","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/decodePoint(_:)","title":"decodePoint(_:)","kind":"symbol","abstract":[{"text":"Decodes a Point from a byte array - please refer [SEC 1] section 2.3.4","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Performance":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"type":"text","text":"Execution times for certain SwiftECC operations"}],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/performance","title":"Performance"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"type":"topic","title":"Encrypted Private Keys","kind":"article","url":"\/documentation\/swiftecc\/encryptedkeys","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","abstract":[{"type":"text","text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme"}]},"doc://SwiftECC/documentation/SwiftECC/Domain/encodePoint(_:_:)":{"abstract":[{"type":"text","text":"Encodes a Point to a byte array - please refer [SEC 1] section 2.3.3"}],"type":"topic","title":"encodePoint(_:_:)","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain\/encodePoint(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encodePoint"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:8SwiftECC5PointV","kind":"typeIdentifier","text":"Point"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bytes","preciseIdentifier":"s:8SwiftECC5Bytesa","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftecc\/domain\/encodepoint(_:_:)"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","title":"Create new Domains","type":"topic","abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"url":"\/documentation\/swiftecc\/createdomain","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","url":"\/documentation\/swiftecc\/signverify","role":"article","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"kind":"article","title":"Sign and Verify","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","kind":"article","type":"topic","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"title":"AEAD Encrypt and Decrypt"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"title":"Encrypt and Decrypt","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","role":"article","type":"topic","kind":"article","url":"\/documentation\/swiftecc\/encryptdecrypt"},"doc://SwiftECC/documentation/SwiftECC/References":{"title":"References","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","role":"article","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"url":"\/documentation\/swiftecc\/references","type":"topic","kind":"article"}}}