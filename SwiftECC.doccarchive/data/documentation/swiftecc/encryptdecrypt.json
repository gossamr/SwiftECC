{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"","anchor":""},{"inlineContent":[{"type":"text","text":"Encryption and decryption is done using the ECIES algorithm based on the AES block cipher using one of"},{"text":" ","type":"text"},{"type":"text","text":"AES-128, AES-192 or AES-256 ciphers, depending on your choice."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following cipher block modes are supported:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"GCM","type":"text"}],"type":"strong"},{"type":"text","text":" - Galois Counter mode. This is the default mode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"ECB","type":"text"}]},{"type":"text","text":" - Electronic Codebook mode with PKCS#7 padding"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CBC","type":"text"}],"type":"strong"},{"text":" - Cipher Block Chaining mode with PKCS#7 padding","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"CFB"}],"type":"strong"},{"type":"text","text":" - Cipher Feedback mode"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CTR"}]},{"text":" - Counter mode","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"OFB","type":"text"}],"type":"strong"},{"type":"text","text":" - Output Feedback mode"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The encryption and decryption speed for domain EC256k1 (the bitcoin domain) measured on an iMac 2021, Apple M1 chip","type":"text"},{"text":" ","type":"text"},{"text":"using AES-128 is shown below - units are Megabytes per second.","type":"text"}],"type":"paragraph"},{"rows":[[[{"inlineContent":[{"text":"Block Mode","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Encrypt","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Decrypt","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"GCM","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"53 MByte\/Sec"}]}],[{"inlineContent":[{"text":"53 MByte\/Sec","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"ECB"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"30 MByte\/Sec"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"30 MByte\/Sec"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"CBC"}]}],[{"inlineContent":[{"text":"24 MByte\/Sec","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"25 MByte\/Sec"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"CFB","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"23 MByte\/Sec"}]}],[{"type":"paragraph","inlineContent":[{"text":"23 MByte\/Sec","type":"text"}]}]],[[{"inlineContent":[{"type":"text","text":"CTR"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"30 MByte\/Sec"}],"type":"paragraph"}],[{"inlineContent":[{"text":"30 MByte\/Sec","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"OFB"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"29 MByte\/Sec"}]}],[{"type":"paragraph","inlineContent":[{"text":"29 MByte\/Sec","type":"text"}]}]]],"alignments":["left","right","right"],"header":"row","type":"table"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless compatibility with IBM’s BlueECC product is necessary, encryption \/ decryption using GCM block mode is deprecated."},{"text":" ","type":"text"},{"type":"text","text":"Use the encryptAESGCM \/ decryptAESGCM methods instead. Their performance is many times better."}]},{"anchor":"Example","text":"Example","level":3,"type":"heading"},{"code":["import SwiftECC","","\/\/ You need a public key to encrypt a message and the corresponding private key to decrypt it,","\/\/ for example from the EC163k1 domain","","let pemPublic163k1 =","\"\"\"","-----BEGIN PUBLIC KEY-----","MEAwEAYHKoZIzj0CAQYFK4EEAAEDLAAEA6txn7CCae0d9AiGj3Rk5m9XflTCB81oe1fKZi4F4oip","SF2u79k8TD5J","-----END PUBLIC KEY-----","\"\"\"","","let pemPrivate163k1 =","\"\"\"","-----BEGIN EC PRIVATE KEY-----","MFICAQEEFNfflqz2oOd9WpxuMZ9wJTFO1sjgoAcGBSuBBAABoS4DLAAEA6txn7CCae0d9AiGj3Rk","5m9XflTCB81oe1fKZi4F4oipSF2u79k8TD5J","-----END EC PRIVATE KEY-----","\"\"\"","","let text = \"The quick brown fox jumps over the lazy dog!\"","","do {","  let pubKey = try ECPublicKey(pem: pemPublic163k1)","  let privKey = try ECPrivateKey(pem: pemPrivate163k1)","  let encryptedData = pubKey.encrypt(msg: text.data(using: .utf8)!, cipher: .AES128)","  let decryptedData = try privKey.decrypt(msg: encryptedData, cipher: .AES128)","  print(String(data: decryptedData, encoding: .utf8)!)","} catch {","  print(\"\\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"syntax":"swift","code":["The quick brown fox jumps over the lazy dog!"],"type":"codeListing"},{"text":"Key Derivation","type":"heading","anchor":"Key-Derivation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC uses the X9.63 Key Derivation Function to derive block cipher keying materiel. Please refer [SEC 1] section 3.6."},{"type":"text","text":" "},{"text":"Six cases are considered:","type":"text"}]},{"level":4,"type":"heading","text":"AES-128\/GCM block mode","anchor":"AES-128GCM-block-mode"},{"inlineContent":[{"text":"KDF generates 32 bytes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 16","type":"text"}]},{"inlineContent":[{"type":"text","text":"Nonce = bytes 16 ..< 32"}],"type":"paragraph"},{"text":"AES-192\/GCM block mode","level":4,"type":"heading","anchor":"AES-192GCM-block-mode"},{"type":"paragraph","inlineContent":[{"text":"KDF generates 40 bytes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"AES encryption\/decryption key = bytes 0 ..< 24"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Nonce = bytes 24 ..< 40"}]},{"level":4,"text":"AES-256\/GCM block mode","type":"heading","anchor":"AES-256GCM-block-mode"},{"inlineContent":[{"text":"KDF generates 48 bytes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"AES encryption\/decryption key = bytes 0 ..< 32"}]},{"inlineContent":[{"type":"text","text":"Nonce = bytes 32 ..< 48"}],"type":"paragraph"},{"level":4,"anchor":"AES-128Non-GCM-block-mode","text":"AES-128\/Non-GCM block mode","type":"heading"},{"inlineContent":[{"text":"KDF generates 48 bytes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 16","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"HMAC key = bytes 16 ..< 48","type":"text"}]},{"type":"heading","anchor":"AES-192Non-GCM-block-mode","text":"AES-192\/Non-GCM block mode","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"KDF generates 56 bytes."}]},{"inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 24","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"HMAC key = bytes 24 ..< 56","type":"text"}]},{"type":"heading","level":4,"text":"AES-256\/Non-GCM block mode","anchor":"AES-256Non-GCM-block-mode"},{"inlineContent":[{"type":"text","text":"KDF generates 64 bytes."}],"type":"paragraph"},{"inlineContent":[{"text":"AES encryption\/decryption key = bytes 0 ..< 32","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HMAC key = bytes 32 ..< 64"}]},{"level":3,"type":"heading","text":"","anchor":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"The AES key and HMAC key can be retrieved with the "},{"type":"codeVoice","code":"ECPrivateKey"},{"text":" method ","type":"text"},{"code":"getKeyAndMac","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"For block modes CBC, CFB, CTR, and OFB the initialization vector (IV) is 16 zero bytes.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"BlueECC-Compatibility","text":"BlueECC Compatibility","level":3},{"inlineContent":[{"type":"text","text":"Data encrypted by SwiftECC in the EC256r1 domain with AES128\/GCM, in the EC384r1 domain with AES256\/GCM"},{"text":" ","type":"text"},{"type":"text","text":"and in the EC521r1 domain with AES256\/GCM can be decrypted with IBM’s BlueECC product using curve prime256v1,"},{"type":"text","text":" "},{"type":"text","text":"secp384r1, and secp521r1, respectively."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Likewise, data encrypted by BlueECC with curve prime256v1, secp384r1 and secp521,","type":"text"},{"type":"text","text":" "},{"text":"can be decrypted by SwiftECC using EC256r1 with AES128\/GCM, EC384r1 with AES256\/GCM and EC521r1 with AES256\/GCM, respectively.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/swiftecc\/encryptdecrypt"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Article","modules":[{"name":"SwiftECC"}],"title":"Encrypt and Decrypt","role":"article"},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftECC\/documentation\/SwiftECC"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"]}],"references":{"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"kind":"article","role":"article","title":"Encrypted Private Keys","type":"topic","abstract":[],"url":"\/documentation\/swiftecc\/encryptedkeys","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","type":"topic","kind":"article","abstract":[],"role":"article","title":"Secret Key Agreement","url":"\/documentation\/swiftecc\/keyagrement"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","abstract":[],"kind":"article","role":"article","url":"\/documentation\/swiftecc\/createdomain","title":"Create new Domains"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"abstract":[],"type":"topic","title":"Sign and Verify","role":"article","kind":"article","url":"\/documentation\/swiftecc\/signverify","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify"},"doc://SwiftECC/documentation/SwiftECC/LoadKeys":{"type":"topic","url":"\/documentation\/swiftecc\/loadkeys","abstract":[],"title":"Load exsisting Keys","role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/LoadKeys","kind":"article"},"doc://SwiftECC/documentation/SwiftECC":{"role":"collection","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[],"kind":"symbol","url":"\/documentation\/swiftecc","title":"SwiftECC","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Performance":{"kind":"article","abstract":[],"url":"\/documentation\/swiftecc\/performance","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","role":"article","type":"topic","title":"Performance"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"kind":"article","abstract":[],"url":"\/documentation\/swiftecc\/aeadencryptdecrypt","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","role":"article","type":"topic","title":"AEAD Encrypt and Decrypt"},"doc://SwiftECC/documentation/SwiftECC/Dependencies":{"role":"article","kind":"article","url":"\/documentation\/swiftecc\/dependencies","title":"Dependencies","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Dependencies"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","url":"\/documentation\/swiftecc\/acknowledgement","kind":"article","type":"topic","title":"Acknowledgement","abstract":[],"role":"article"},"doc://SwiftECC/documentation/SwiftECC/Basics":{"role":"article","kind":"article","url":"\/documentation\/swiftecc\/basics","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Basics","title":"Basics","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/CreateKeys":{"role":"article","kind":"article","url":"\/documentation\/swiftecc\/createkeys","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateKeys","title":"Create new Keys","abstract":[],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"url":"\/documentation\/swiftecc\/ecarithmetic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","role":"article","title":"Elliptic Curve Arithmetic","kind":"article","type":"topic","abstract":[]},"doc://SwiftECC/documentation/SwiftECC/References":{"url":"\/documentation\/swiftecc\/references","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","role":"article","title":"References","type":"topic","abstract":[],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC/Usage":{"url":"\/documentation\/swiftecc\/usage","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Usage","role":"article","title":"Usage","kind":"article","type":"topic","abstract":[]}}}