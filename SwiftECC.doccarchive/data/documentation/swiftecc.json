{"topicSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature"],"title":"Classes"},{"title":"Structures","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Base64"]},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes"],"title":"Type Aliases"},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"],"title":"Enumerations"},{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement"],"title":"Articles"}],"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc"]}],"metadata":{"symbolKind":"module","role":"collection","title":"SwiftECC","roleHeading":"Framework","modules":[{"name":"SwiftECC"}],"externalID":"SwiftECC"},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/SwiftECC\/documentation\/SwiftECC","interfaceLanguage":"swift"},"abstract":[{"text":"Elliptic curve cryptography","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftECC provides elliptic curve cryptography in Swift.","type":"text"},{"text":" ","type":"text"},{"text":"This encompasses:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating, loading and storing public and private keys"}]}]},{"content":[{"inlineContent":[{"text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ability to create your own domains"}]}]},{"content":[{"inlineContent":[{"text":"General elliptic curve arithmetic","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"Basics","anchor":"Basics"},{"inlineContent":[{"text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the ","type":"text"},{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","type":"reference","isActive":true},{"text":" class.","type":"text"},{"text":" ","type":"text"},{"text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,"},{"text":" ","type":"text"},{"type":"text","text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get a predefined domain either from its curve, like"}]},{"syntax":"swift","code":["let domain = Domain.instance(curve: .EC521r1)"],"type":"codeListing"},{"inlineContent":[{"text":"or from its OID, like","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let domain = try Domain.instance(oid: EC521r1.oid)"],"type":"codeListing"},{"text":"Usage","type":"heading","anchor":"Usage","level":3},{"type":"paragraph","inlineContent":[{"text":"To use SwiftECC, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package.swift"}]},{"type":"text","text":" file add a dependency like"}]},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.3.0\"),","]"]},{"inlineContent":[{"type":"text","text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.5.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.16.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.4.0\"),","],"]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftECC requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"text":" types be 64 bit types.","type":"text"}]},{"inlineContent":[{"type":"text","text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"type":"text","text":" "},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}],"type":"paragraph"}],"style":"important"}]}],"references":{"doc://SwiftECC/documentation/SwiftECC/RP":{"role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RP"}],"abstract":[{"text":"An elliptic curve reduction polynomial","type":"text"}],"title":"RP","url":"\/documentation\/swiftecc\/rp","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RP"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/ECPrivateKey":{"title":"ECPrivateKey","url":"\/documentation\/swiftecc\/ecprivatekey","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECPrivateKey"}],"kind":"symbol","navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}],"abstract":[{"type":"text","text":"An elliptic curve private key"}]},"doc://SwiftECC/documentation/SwiftECC/ECException":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException","url":"\/documentation\/swiftecc\/ecexception","navigatorTitle":[{"kind":"identifier","text":"ECException"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECException"}],"title":"ECException","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The elliptic curve exceptions"}],"role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","url":"\/documentation\/swiftecc\/createdomain","title":"Create new Domains","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/References":{"role":"article","kind":"article","title":"References","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","type":"topic","url":"\/documentation\/swiftecc\/references","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/BlockMode":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","url":"\/documentation\/swiftecc\/blockmode","navigatorTitle":[{"text":"BlockMode","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"BlockMode","kind":"identifier"}],"title":"BlockMode","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The block cipher modes"}],"role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/Domain":{"navigatorTitle":[{"text":"Domain","kind":"identifier"}],"abstract":[{"text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"kind":"symbol","type":"topic","title":"Domain","url":"\/documentation\/swiftecc\/domain","role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","title":"AEAD Encrypt and Decrypt","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Byte":{"type":"topic","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Byte"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","url":"\/documentation\/swiftecc\/byte","title":"Byte","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","title":"Sign and Verify","kind":"article","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"url":"\/documentation\/swiftecc\/signverify","role":"article"},"doc://SwiftECC/documentation/SwiftECC/ECSignature":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ECSignature","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ECSignature"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature","url":"\/documentation\/swiftecc\/ecsignature","abstract":[{"text":"An elliptic curve signature","type":"text"}],"kind":"symbol","type":"topic","title":"ECSignature","role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/Acknowledgement":{"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Acknowledgement","title":"Acknowledgement","kind":"article","abstract":[{"type":"text","text":"The AES block cipher implementation is essentially a translation to Swift of the Go Language implementation of AES"}],"url":"\/documentation\/swiftecc\/acknowledgement","role":"article"},"doc://SwiftECC/documentation/SwiftECC/ECCurve":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECCurve"}],"title":"ECCurve","role":"symbol","abstract":[{"text":"The predefined elliptic curves","type":"text"}],"url":"\/documentation\/swiftecc\/eccurve","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","navigatorTitle":[{"text":"ECCurve","kind":"identifier"}],"type":"topic"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","title":"Encrypt and Decrypt","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/AESCipher":{"role":"symbol","kind":"symbol","title":"AESCipher","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","type":"topic","url":"\/documentation\/swiftecc\/aescipher","navigatorTitle":[{"kind":"identifier","text":"AESCipher"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AESCipher"}],"abstract":[{"text":"The AES block ciphers","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Performance":{"role":"article","url":"\/documentation\/swiftecc\/performance","type":"topic","title":"Performance","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"type":"text","text":"Execution times for certain SwiftECC operations"}],"kind":"article"},"doc://SwiftECC/documentation/SwiftECC":{"url":"\/documentation\/swiftecc","type":"topic","role":"collection","title":"SwiftECC","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic curve cryptography","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/Bytes":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bytes"}],"navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes","url":"\/documentation\/swiftecc\/bytes","abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"kind":"symbol","type":"topic","title":"Bytes","role":"symbol"},"doc://SwiftECC/documentation/SwiftECC/ECPublicKey":{"type":"topic","navigatorTitle":[{"text":"ECPublicKey","kind":"identifier"}],"title":"ECPublicKey","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECPublicKey"}],"abstract":[{"text":"An elliptic curve public key","type":"text"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","url":"\/documentation\/swiftecc\/ecpublickey","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"abstract":[{"type":"text","text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","url":"\/documentation\/swiftecc\/encryptedkeys","title":"Encrypted Private Keys","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Base64":{"title":"Base64","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Base64","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Base64","navigatorTitle":[{"text":"Base64","kind":"identifier"}],"type":"topic","abstract":[],"url":"\/documentation\/swiftecc\/base64","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"abstract":[{"type":"text","text":"SwiftECC implements the common elliptic curve arithmetic operations"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","url":"\/documentation\/swiftecc\/ecarithmetic","title":"Elliptic Curve Arithmetic","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"abstract":[{"type":"text","text":"Generating a shared secret"}],"type":"topic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","url":"\/documentation\/swiftecc\/keyagrement","title":"Secret Key Agreement","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Point":{"type":"topic","navigatorTitle":[{"text":"Point","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An elliptic curve point"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Point","kind":"identifier"}],"title":"Point","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","url":"\/documentation\/swiftecc\/point"}}}