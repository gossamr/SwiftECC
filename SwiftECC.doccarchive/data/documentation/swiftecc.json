{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftECC provides elliptic curve cryptography in Swift.","type":"text"},{"text":" ","type":"text"},{"text":"This encompasses:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Creating, loading and storing public and private keys","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Ability to create your own domains","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"General elliptic curve arithmetic","type":"text"}]}]}]},{"type":"heading","text":"Basics","anchor":"Basics","level":3},{"type":"paragraph","inlineContent":[{"text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the ","type":"text"},{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain","isActive":true,"type":"reference"},{"text":" class.","type":"text"},{"text":" ","type":"text"},{"text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,"},{"type":"text","text":" "},{"type":"text","text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can get a predefined domain either from its curve, like"}]},{"type":"codeListing","syntax":"swift","code":["let domain = Domain.instance(curve: .EC521r1)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"or from its OID, like"}]},{"type":"codeListing","syntax":"swift","code":["let domain = try Domain.instance(oid: EC521r1.oid)"]},{"type":"heading","text":"Usage","anchor":"Usage","level":3},{"inlineContent":[{"text":"To use SwiftECC, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Package.swift","type":"text"}]},{"text":" file add a dependency like","type":"text"}],"type":"paragraph"},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.5.0\"),","]"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages","type":"text"}],"type":"paragraph"},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.7.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.21.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.13.0\"),","],"],"syntax":"swift","type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftECC requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"type":"text","text":" "},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}],"name":"Important","style":"important","type":"aside"}]}],"abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"identifier":{"url":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Framework","role":"collection","symbolKind":"module","modules":[{"name":"SwiftECC"}],"title":"SwiftECC","externalID":"SwiftECC"},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECSignature"]},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/RP"]},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Bytes"]},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECException"]},{"title":"Articles","anchor":"Articles","identifiers":["doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc"]}],"references":{"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECArithmetic":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECArithmetic","abstract":[{"text":"SwiftECC implements the common elliptic curve arithmetic operations","type":"text"}],"kind":"article","type":"topic","title":"Elliptic Curve Arithmetic","url":"\/documentation\/swiftecc\/ecarithmetic","role":"article"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECPublicKey":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECPublicKey","kind":"symbol","url":"\/documentation\/swiftecc\/ecpublickey","role":"symbol","navigatorTitle":[{"text":"ECPublicKey","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPublicKey","kind":"identifier"}],"type":"topic","abstract":[{"text":"An elliptic curve public key","type":"text"}],"title":"ECPublicKey"},"doc://swiftecc.SwiftECC/documentation/SwiftECC":{"type":"topic","abstract":[{"type":"text","text":"Elliptic Curve Cryptography"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC","kind":"symbol","title":"SwiftECC","url":"\/documentation\/swiftecc","role":"collection"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"url":"\/documentation\/swiftecc\/aeadencryptdecrypt","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","title":"AEAD Encrypt and Decrypt","type":"topic","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"kind":"article","role":"article"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Domain":{"role":"symbol","navigatorTitle":[{"text":"Domain","kind":"identifier"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Domain","url":"\/documentation\/swiftecc\/domain","abstract":[{"type":"text","text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime"}],"title":"Domain","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}],"type":"topic"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECSignature":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECSignature","kind":"identifier"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECSignature","url":"\/documentation\/swiftecc\/ecsignature","role":"symbol","abstract":[{"text":"An elliptic curve signature","type":"text"}],"navigatorTitle":[{"text":"ECSignature","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ECSignature"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/KeyManagement":{"url":"\/documentation\/swiftecc\/keymanagement","title":"Key Management","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyManagement","type":"topic","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"kind":"article","role":"article"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"ECIES encryption and decryption","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","url":"\/documentation\/swiftecc\/encryptdecrypt","title":"Encrypt and Decrypt"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECPrivateKey":{"abstract":[{"type":"text","text":"An elliptic curve private key"}],"title":"ECPrivateKey","type":"topic","url":"\/documentation\/swiftecc\/ecprivatekey","role":"symbol","navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPrivateKey","kind":"identifier"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","kind":"symbol"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECException":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECException","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECException","kind":"identifier"}],"abstract":[{"type":"text","text":"The elliptic curve exceptions"}],"title":"ECException","type":"topic","role":"symbol","url":"\/documentation\/swiftecc\/ecexception","kind":"symbol","navigatorTitle":[{"text":"ECException","kind":"identifier"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Performance":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"Execution times for certain SwiftECC operations","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Performance","url":"\/documentation\/swiftecc\/performance","title":"Performance"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/AESCipher":{"type":"topic","role":"symbol","abstract":[{"text":"The AES block ciphers","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/AESCipher","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AESCipher","kind":"identifier"}],"url":"\/documentation\/swiftecc\/aescipher","navigatorTitle":[{"text":"AESCipher","kind":"identifier"}],"title":"AESCipher","kind":"symbol"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","role":"article","abstract":[{"text":"Signing data and verifying signatures","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/SignVerify","url":"\/documentation\/swiftecc\/signverify","kind":"article","title":"Sign and Verify"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/KeyAgrement","title":"Secret Key Agreement","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/keyagrement","abstract":[{"type":"text","text":"Generating a shared secret"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/EncryptedKeys":{"role":"article","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","kind":"article","type":"topic","title":"Encrypted Private Keys","url":"\/documentation\/swiftecc\/encryptedkeys","abstract":[{"text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme","type":"text"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/ECCurve":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECCurve"}],"role":"symbol","url":"\/documentation\/swiftecc\/eccurve","title":"ECCurve","abstract":[{"text":"The predefined elliptic curves","type":"text"}],"kind":"symbol","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/ECCurve","navigatorTitle":[{"kind":"identifier","text":"ECCurve"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/BlockMode":{"url":"\/documentation\/swiftecc\/blockmode","role":"symbol","kind":"symbol","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/BlockMode","title":"BlockMode","navigatorTitle":[{"kind":"identifier","text":"BlockMode"}],"type":"topic","abstract":[{"type":"text","text":"The block cipher modes"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockMode"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Bytes":{"abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"title":"Bytes","url":"\/documentation\/swiftecc\/bytes","type":"topic","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Bytes","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bytes"}],"navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"role":"symbol"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Point":{"navigatorTitle":[{"kind":"identifier","text":"Point"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Point","kind":"symbol","url":"\/documentation\/swiftecc\/point","title":"Point","abstract":[{"type":"text","text":"An elliptic curve point"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Point"}],"role":"symbol","type":"topic"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/Byte":{"kind":"symbol","type":"topic","url":"\/documentation\/swiftecc\/byte","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"title":"Byte","identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/Byte","navigatorTitle":[{"text":"Byte","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Unsigned 8 bit value","type":"text"}]},"doc://swiftecc.SwiftECC/documentation/SwiftECC/RP":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/RP","title":"RP","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RP","kind":"identifier"}],"navigatorTitle":[{"text":"RP","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"An elliptic curve reduction polynomial","type":"text"}],"url":"\/documentation\/swiftecc\/rp"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/References":{"role":"article","kind":"article","type":"topic","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/References","url":"\/documentation\/swiftecc\/references","title":"References"},"doc://swiftecc.SwiftECC/documentation/SwiftECC/CreateDomain":{"identifier":"doc:\/\/swiftecc.SwiftECC\/documentation\/SwiftECC\/CreateDomain","title":"Create new Domains","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/createdomain","abstract":[{"text":"You can create your own domains as illustrated by two examples","type":"text"}]}}}