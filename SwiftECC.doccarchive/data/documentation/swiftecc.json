{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Elliptic Curve Cryptography","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftECC\/documentation\/SwiftECC"},"metadata":{"modules":[{"name":"SwiftECC"}],"externalID":"SwiftECC","title":"SwiftECC","role":"collection","roleHeading":"Framework","symbolKind":"module"},"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftECC provides elliptic curve cryptography in Swift.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This encompasses:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Creating, loading and storing public and private keys"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Encryption and decryption using the ECIES algorithm based on the AES block cipher and six different block modes"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"AEAD (Authenticated Encryption with Associated Data) encryption and decryption using the ECIES algorithm with the ChaCha20\/Poly1305 or the AES\/GCM cipher"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Signature signing and verifying using the ECDSA algorithm, including the option of deterministic signatures","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Secret key agreement using the Diffie-Hellman key agreement algorithm - ECDH"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ability to create your own domains","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"General elliptic curve arithmetic"}],"type":"paragraph"}]}]},{"anchor":"Basics","text":"Basics","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic concept in SwiftECC is the Elliptic Curve Domain, represented by the "},{"type":"reference","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","isActive":true},{"text":" class.","type":"text"},{"type":"text","text":" "},{"text":"Please, refer section 3.1 in [SEC 1] that describes the domain concept in detail.","type":"text"}]},{"inlineContent":[{"text":"There are 18 predefined NIST domains and 14 predefined Brainpool domains in SwiftECC,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and it is possible to create your own characteristic 2, and odd prime characteristic domains."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can get a predefined domain either from its curve, like","type":"text"}]},{"type":"codeListing","code":["let domain = Domain.instance(curve: .EC521r1)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"or from its OID, like"}]},{"syntax":"swift","type":"codeListing","code":["let domain = try Domain.instance(oid: EC521r1.oid)"]},{"anchor":"Usage","type":"heading","level":3,"text":"Usage"},{"inlineContent":[{"text":"To use SwiftECC, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Package.swift","type":"text"}]},{"text":" file add a dependency like","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftECC\", from: \"5.4.0\"),","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC itself depends on the ASN1, BigInt and Digest packages"}]},{"type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.6.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.19.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.8.0\"),","],"],"syntax":"swift"},{"type":"aside","style":"important","name":"Important","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftECC requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"text":" and ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftECC uses the CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"text":" ","type":"text"},{"text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8.","type":"text"}]}]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature"],"title":"Classes"},{"title":"Structures","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException"]},{"title":"Articles","identifiers":["doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify","doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","doc:\/\/SwiftECC\/documentation\/SwiftECC\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftecc"]}],"references":{"doc://SwiftECC/documentation/SwiftECC/ECSignature":{"type":"topic","abstract":[{"type":"text","text":"An elliptic curve signature"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECSignature","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ECSignature","kind":"identifier"}],"navigatorTitle":[{"text":"ECSignature","kind":"identifier"}],"title":"ECSignature","url":"\/documentation\/swiftecc\/ecsignature","kind":"symbol"},"doc://SwiftECC/documentation/SwiftECC/ECPublicKey":{"kind":"symbol","title":"ECPublicKey","abstract":[{"text":"An elliptic curve public key","type":"text"}],"navigatorTitle":[{"text":"ECPublicKey","kind":"identifier"}],"url":"\/documentation\/swiftecc\/ecpublickey","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ECPublicKey","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPublicKey"},"doc://SwiftECC/documentation/SwiftECC/KeyAgrement":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyAgrement","role":"article","type":"topic","title":"Secret Key Agreement","abstract":[{"type":"text","text":"Generating a shared secret"}],"kind":"article","url":"\/documentation\/swiftecc\/keyagrement"},"doc://SwiftECC/documentation/SwiftECC/EncryptedKeys":{"type":"topic","title":"Encrypted Private Keys","kind":"article","url":"\/documentation\/swiftecc\/encryptedkeys","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptedKeys","role":"article","abstract":[{"type":"text","text":"Private keys can be encrypted as described in [PKCS#5] using the PBES2 scheme"}]},"doc://SwiftECC/documentation/SwiftECC/Performance":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Performance","abstract":[{"type":"text","text":"Execution times for certain SwiftECC operations"}],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftecc\/performance","title":"Performance"},"doc://SwiftECC/documentation/SwiftECC/Byte":{"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"url":"\/documentation\/swiftecc\/byte","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Byte"}],"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"title":"Byte","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Byte"},"doc://SwiftECC/documentation/SwiftECC":{"type":"topic","kind":"symbol","title":"SwiftECC","role":"collection","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC","abstract":[{"text":"Elliptic Curve Cryptography","type":"text"}],"url":"\/documentation\/swiftecc"},"doc://SwiftECC/documentation/SwiftECC/ECException":{"url":"\/documentation\/swiftecc\/ecexception","kind":"symbol","navigatorTitle":[{"text":"ECException","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECException","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECException","abstract":[{"type":"text","text":"The elliptic curve exceptions"}],"title":"ECException"},"doc://SwiftECC/documentation/SwiftECC/AEADEncryptDecrypt":{"role":"article","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AEADEncryptDecrypt","kind":"article","type":"topic","url":"\/documentation\/swiftecc\/aeadencryptdecrypt","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"title":"AEAD Encrypt and Decrypt"},"doc://SwiftECC/documentation/SwiftECC/Bytes":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"title":"Bytes","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bytes","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftecc\/bytes"},"doc://SwiftECC/documentation/SwiftECC/SignVerify":{"type":"topic","url":"\/documentation\/swiftecc\/signverify","role":"article","abstract":[{"type":"text","text":"Signing data and verifying signatures"}],"kind":"article","title":"Sign and Verify","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/SignVerify"},"doc://SwiftECC/documentation/SwiftECC/CreateDomain":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/CreateDomain","title":"Create new Domains","type":"topic","abstract":[{"type":"text","text":"You can create your own domains as illustrated by two examples"}],"url":"\/documentation\/swiftecc\/createdomain","kind":"article","role":"article"},"doc://SwiftECC/documentation/SwiftECC/AESCipher":{"kind":"symbol","url":"\/documentation\/swiftecc\/aescipher","role":"symbol","navigatorTitle":[{"text":"AESCipher","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AESCipher"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/AESCipher","title":"AESCipher","type":"topic","abstract":[{"text":"The AES block ciphers","type":"text"}]},"doc://SwiftECC/documentation/SwiftECC/ECPrivateKey":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECPrivateKey","kind":"identifier"}],"abstract":[{"type":"text","text":"An elliptic curve private key"}],"role":"symbol","type":"topic","title":"ECPrivateKey","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECPrivateKey","kind":"symbol","url":"\/documentation\/swiftecc\/ecprivatekey","navigatorTitle":[{"text":"ECPrivateKey","kind":"identifier"}]},"doc://SwiftECC/documentation/SwiftECC/ECCurve":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ECCurve","kind":"identifier"}],"kind":"symbol","title":"ECCurve","role":"symbol","navigatorTitle":[{"text":"ECCurve","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECCurve","abstract":[{"type":"text","text":"The predefined elliptic curves"}],"url":"\/documentation\/swiftecc\/eccurve"},"doc://SwiftECC/documentation/SwiftECC/RP":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/RP","role":"symbol","title":"RP","kind":"symbol","abstract":[{"text":"An elliptic curve reduction polynomial","type":"text"}],"type":"topic","navigatorTitle":[{"text":"RP","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RP","kind":"identifier"}],"url":"\/documentation\/swiftecc\/rp"},"doc://SwiftECC/documentation/SwiftECC/References":{"title":"References","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/References","role":"article","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"url":"\/documentation\/swiftecc\/references","type":"topic","kind":"article"},"doc://SwiftECC/documentation/SwiftECC/KeyManagement":{"kind":"article","url":"\/documentation\/swiftecc\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/KeyManagement","title":"Key Management","type":"topic","role":"article"},"doc://SwiftECC/documentation/SwiftECC/Point":{"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Point","role":"symbol","abstract":[{"text":"An elliptic curve point","type":"text"}],"url":"\/documentation\/swiftecc\/point","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Point","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Point"}],"type":"topic","kind":"symbol","title":"Point"},"doc://SwiftECC/documentation/SwiftECC/BlockMode":{"url":"\/documentation\/swiftecc\/blockmode","role":"symbol","abstract":[{"type":"text","text":"The block cipher modes"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"BlockMode","kind":"identifier"}],"title":"BlockMode","navigatorTitle":[{"text":"BlockMode","kind":"identifier"}],"identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/BlockMode","type":"topic"},"doc://SwiftECC/documentation/SwiftECC/Domain":{"type":"topic","url":"\/documentation\/swiftecc\/domain","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Domain","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An elliptic curve domain - either with characteristic 2 or characteristic an odd prime","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Domain"}],"kind":"symbol","title":"Domain","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/Domain"},"doc://SwiftECC/documentation/SwiftECC/EncryptDecrypt":{"abstract":[{"type":"text","text":"ECIES encryption and decryption"}],"title":"Encrypt and Decrypt","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/EncryptDecrypt","role":"article","type":"topic","kind":"article","url":"\/documentation\/swiftecc\/encryptdecrypt"},"doc://SwiftECC/documentation/SwiftECC/ECArithmetic":{"title":"Elliptic Curve Arithmetic","identifier":"doc:\/\/SwiftECC\/documentation\/SwiftECC\/ECArithmetic","role":"article","abstract":[{"text":"SwiftECC implements the common elliptic curve arithmetic operations","type":"text"}],"url":"\/documentation\/swiftecc\/ecarithmetic","type":"topic","kind":"article"}}}